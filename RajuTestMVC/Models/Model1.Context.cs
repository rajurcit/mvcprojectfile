//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RajuTestMVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AgriDBEntities : DbContext
    {
        public AgriDBEntities()
            : base("name=AgriDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MstApplication> MstApplications { get; set; }
        public virtual DbSet<MstCropPop> MstCropPops { get; set; }
        public virtual DbSet<MstCropPopsTextDetail> MstCropPopsTextDetails { get; set; }
        public virtual DbSet<MstCrop> MstCrops { get; set; }
        public virtual DbSet<MstCropsTextDetail> MstCropsTextDetails { get; set; }
        public virtual DbSet<MstCropType> MstCropTypes { get; set; }
        public virtual DbSet<MstCropTypesTextDetail> MstCropTypesTextDetails { get; set; }
        public virtual DbSet<MstDistrict> MstDistricts { get; set; }
        public virtual DbSet<MstDistrictsTextDetail> MstDistrictsTextDetails { get; set; }
        public virtual DbSet<MstLanguage> MstLanguages { get; set; }
        public virtual DbSet<MstMenu> MstMenus { get; set; }
        public virtual DbSet<MstNewCatTextDetail> MstNewCatTextDetails { get; set; }
        public virtual DbSet<MstNewsCategory> MstNewsCategories { get; set; }
        public virtual DbSet<MstNewsImage> MstNewsImages { get; set; }
        public virtual DbSet<MstPincode> MstPincodes { get; set; }
        public virtual DbSet<MstState> MstStates { get; set; }
        public virtual DbSet<MstStatesTextDetail> MstStatesTextDetails { get; set; }
        public virtual DbSet<MstUserRole> MstUserRoles { get; set; }
        public virtual DbSet<tblAnimal> tblAnimals { get; set; }
        public virtual DbSet<tblAnimalCare> tblAnimalCares { get; set; }
        public virtual DbSet<tblCropPopDescription> tblCropPopDescriptions { get; set; }
        public virtual DbSet<tblCropPopDescriptionTextDetail> tblCropPopDescriptionTextDetails { get; set; }
        public virtual DbSet<tblDistrictCrop> tblDistrictCrops { get; set; }
        public virtual DbSet<tblNewsDetail> tblNewsDetails { get; set; }
        public virtual DbSet<tblNewsTextDetail> tblNewsTextDetails { get; set; }
        public virtual DbSet<tblPopCropTypesMapping> tblPopCropTypesMappings { get; set; }
        public virtual DbSet<tblPopDescription> tblPopDescriptions { get; set; }
        public virtual DbSet<tblRoleMenu> tblRoleMenus { get; set; }
        public virtual DbSet<tblUserApplication> tblUserApplications { get; set; }
        public virtual DbSet<tblUserMapping> tblUserMappings { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<BreedDesc> BreedDescs { get; set; }
        public virtual DbSet<tblBreed> tblBreeds { get; set; }
        public virtual DbSet<tblBreedDesc> tblBreedDescs { get; set; }
        public virtual DbSet<tblCareDescN> tblCareDescNs { get; set; }
        public virtual DbSet<vw_CropPOPDescriptionDetails> vw_CropPOPDescriptionDetails { get; set; }
        public virtual DbSet<vw_CropPOPMapping> vw_CropPOPMapping { get; set; }
        public virtual DbSet<vw_MenuDetails> vw_MenuDetails { get; set; }
    
        [DbFunction("AgriDBEntities", "fnSplit")]
        public virtual IQueryable<fnSplit_Result> fnSplit(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplit_Result>("[AgriDBEntities].[fnSplit](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<USP_Animal_Result> USP_Animal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Animal_Result>("USP_Animal");
        }
    
        public virtual int usp_DeleteDistrictCrop(Nullable<int> districtCropID, Nullable<int> createdBy)
        {
            var districtCropIDParameter = districtCropID.HasValue ?
                new ObjectParameter("DistrictCropID", districtCropID) :
                new ObjectParameter("DistrictCropID", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteDistrictCrop", districtCropIDParameter, createdByParameter);
        }
    
        public virtual ObjectResult<USP_GetAnimalcare_Result> USP_GetAnimalcare(Nullable<int> careID)
        {
            var careIDParameter = careID.HasValue ?
                new ObjectParameter("CareID", careID) :
                new ObjectParameter("CareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetAnimalcare_Result>("USP_GetAnimalcare", careIDParameter);
        }
    
        public virtual ObjectResult<USP_GetAplicationsList_Result> USP_GetAplicationsList(Nullable<int> appID)
        {
            var appIDParameter = appID.HasValue ?
                new ObjectParameter("AppID", appID) :
                new ObjectParameter("AppID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetAplicationsList_Result>("USP_GetAplicationsList", appIDParameter);
        }
    
        public virtual ObjectResult<usp_GetCrop_Result> usp_GetCrop(Nullable<int> cropID, Nullable<int> cropTypeID, Nullable<int> districtID)
        {
            var cropIDParameter = cropID.HasValue ?
                new ObjectParameter("CropID", cropID) :
                new ObjectParameter("CropID", typeof(int));
    
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCrop_Result>("usp_GetCrop", cropIDParameter, cropTypeIDParameter, districtIDParameter);
        }
    
        public virtual ObjectResult<USP_GetCropDesc_Result> USP_GetCropDesc(Nullable<int> cropTypeID, Nullable<int> cropId)
        {
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var cropIdParameter = cropId.HasValue ?
                new ObjectParameter("CropId", cropId) :
                new ObjectParameter("CropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetCropDesc_Result>("USP_GetCropDesc", cropTypeIDParameter, cropIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCropDescDetails_Result> usp_GetCropDescDetails(Nullable<int> cropDescID, Nullable<int> stateID, Nullable<int> districtID, Nullable<int> cropTypeID, Nullable<int> cropID, Nullable<int> cropPopID, Nullable<int> descriptionID)
        {
            var cropDescIDParameter = cropDescID.HasValue ?
                new ObjectParameter("CropDescID", cropDescID) :
                new ObjectParameter("CropDescID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var cropIDParameter = cropID.HasValue ?
                new ObjectParameter("CropID", cropID) :
                new ObjectParameter("CropID", typeof(int));
    
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            var descriptionIDParameter = descriptionID.HasValue ?
                new ObjectParameter("DescriptionID", descriptionID) :
                new ObjectParameter("DescriptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCropDescDetails_Result>("usp_GetCropDescDetails", cropDescIDParameter, stateIDParameter, districtIDParameter, cropTypeIDParameter, cropIDParameter, cropPopIDParameter, descriptionIDParameter);
        }
    
        public virtual ObjectResult<USP_GetCropHead_Result> USP_GetCropHead(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("districtId", districtId) :
                new ObjectParameter("districtId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetCropHead_Result>("USP_GetCropHead", districtIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCropPopDescLang_Result> usp_GetCropPopDescLang(Nullable<int> langID, Nullable<int> stateID, Nullable<int> districtId, Nullable<int> cropTypeId, Nullable<int> cropId, Nullable<int> cropPopID, Nullable<int> cropDescID)
        {
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("langID", langID) :
                new ObjectParameter("langID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cropTypeIdParameter = cropTypeId.HasValue ?
                new ObjectParameter("CropTypeId", cropTypeId) :
                new ObjectParameter("CropTypeId", typeof(int));
    
            var cropIdParameter = cropId.HasValue ?
                new ObjectParameter("CropId", cropId) :
                new ObjectParameter("CropId", typeof(int));
    
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            var cropDescIDParameter = cropDescID.HasValue ?
                new ObjectParameter("CropDescID", cropDescID) :
                new ObjectParameter("CropDescID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCropPopDescLang_Result>("usp_GetCropPopDescLang", langIDParameter, stateIDParameter, districtIdParameter, cropTypeIdParameter, cropIdParameter, cropPopIDParameter, cropDescIDParameter);
        }
    
        public virtual ObjectResult<usp_GetCropPops_Result> usp_GetCropPops(Nullable<int> cropPopID, Nullable<int> cropTypeId)
        {
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            var cropTypeIdParameter = cropTypeId.HasValue ?
                new ObjectParameter("cropTypeId", cropTypeId) :
                new ObjectParameter("cropTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCropPops_Result>("usp_GetCropPops", cropPopIDParameter, cropTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCropPopsDetails_Result> usp_GetCropPopsDetails(Nullable<int> cropPopID)
        {
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCropPopsDetails_Result>("usp_GetCropPopsDetails", cropPopIDParameter);
        }
    
        public virtual ObjectResult<usp_GetCropPOPTextDetails_Result> usp_GetCropPOPTextDetails(Nullable<int> cropPopID, Nullable<int> langID, Nullable<int> cropTypeID)
        {
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCropPOPTextDetails_Result>("usp_GetCropPOPTextDetails", cropPopIDParameter, langIDParameter, cropTypeIDParameter);
        }
    
        public virtual ObjectResult<USP_GetCrops_Result> USP_GetCrops(Nullable<int> districtId, Nullable<int> cropTypeId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("districtId", districtId) :
                new ObjectParameter("districtId", typeof(int));
    
            var cropTypeIdParameter = cropTypeId.HasValue ?
                new ObjectParameter("CropTypeId", cropTypeId) :
                new ObjectParameter("CropTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetCrops_Result>("USP_GetCrops", districtIdParameter, cropTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCropTextDetails_Result> usp_GetCropTextDetails(Nullable<int> cropID, Nullable<int> langID, Nullable<int> cropTypeID, Nullable<int> districtID)
        {
            var cropIDParameter = cropID.HasValue ?
                new ObjectParameter("CropID", cropID) :
                new ObjectParameter("CropID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCropTextDetails_Result>("usp_GetCropTextDetails", cropIDParameter, langIDParameter, cropTypeIDParameter, districtIDParameter);
        }
    
        public virtual ObjectResult<usp_GetCropType_Result> usp_GetCropType(Nullable<int> cropTypeID, string districtID, Nullable<int> stateID)
        {
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var districtIDParameter = districtID != null ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(string));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCropType_Result>("usp_GetCropType", cropTypeIDParameter, districtIDParameter, stateIDParameter);
        }
    
        public virtual ObjectResult<usp_GetCropTypeTextDetails_Result> usp_GetCropTypeTextDetails(Nullable<int> cropTypeID, Nullable<int> langID, Nullable<int> stateID, Nullable<int> districtID)
        {
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCropTypeTextDetails_Result>("usp_GetCropTypeTextDetails", cropTypeIDParameter, langIDParameter, stateIDParameter, districtIDParameter);
        }
    
        public virtual ObjectResult<USP_GetDistrict_Result> USP_GetDistrict(Nullable<int> stateId, Nullable<int> districtId)
        {
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetDistrict_Result>("USP_GetDistrict", stateIdParameter, districtIdParameter);
        }
    
        public virtual ObjectResult<usp_GetDistrictCrop_Result> usp_GetDistrictCrop(Nullable<int> stateID, string districtID, Nullable<int> cropID, Nullable<int> cropTypeID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var districtIDParameter = districtID != null ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(string));
    
            var cropIDParameter = cropID.HasValue ?
                new ObjectParameter("CropID", cropID) :
                new ObjectParameter("CropID", typeof(int));
    
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDistrictCrop_Result>("usp_GetDistrictCrop", stateIDParameter, districtIDParameter, cropIDParameter, cropTypeIDParameter);
        }
    
        public virtual ObjectResult<usp_GetDistrictTextDetails_Result> usp_GetDistrictTextDetails(Nullable<int> districtID, Nullable<int> langID)
        {
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDistrictTextDetails_Result>("usp_GetDistrictTextDetails", districtIDParameter, langIDParameter);
        }
    
        public virtual ObjectResult<usp_GetLanguages_Result> usp_GetLanguages(Nullable<int> langID)
        {
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetLanguages_Result>("usp_GetLanguages", langIDParameter);
        }
    
        public virtual ObjectResult<usp_GetMenuList_Result> usp_GetMenuList(Nullable<int> roleID, Nullable<int> appID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var appIDParameter = appID.HasValue ?
                new ObjectParameter("AppID", appID) :
                new ObjectParameter("AppID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMenuList_Result>("usp_GetMenuList", roleIDParameter, appIDParameter);
        }
    
        public virtual ObjectResult<usp_GetNewsCategory_Result> usp_GetNewsCategory(Nullable<int> newscatId)
        {
            var newscatIdParameter = newscatId.HasValue ?
                new ObjectParameter("NewscatId", newscatId) :
                new ObjectParameter("NewscatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetNewsCategory_Result>("usp_GetNewsCategory", newscatIdParameter);
        }
    
        public virtual ObjectResult<usp_GetNewsCatTextDetails_Result> usp_GetNewsCatTextDetails(Nullable<int> newscatID, Nullable<int> langID)
        {
            var newscatIDParameter = newscatID.HasValue ?
                new ObjectParameter("NewscatID", newscatID) :
                new ObjectParameter("NewscatID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetNewsCatTextDetails_Result>("usp_GetNewsCatTextDetails", newscatIDParameter, langIDParameter);
        }
    
        public virtual ObjectResult<Usp_GetNewsDetail_Result> Usp_GetNewsDetail(Nullable<int> newsID, Nullable<int> categoryID, Nullable<int> stateID, Nullable<int> districtID, Nullable<System.DateTime> validfrom, Nullable<System.DateTime> validto)
        {
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("newsID", newsID) :
                new ObjectParameter("newsID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            var validfromParameter = validfrom.HasValue ?
                new ObjectParameter("Validfrom", validfrom) :
                new ObjectParameter("Validfrom", typeof(System.DateTime));
    
            var validtoParameter = validto.HasValue ?
                new ObjectParameter("Validto", validto) :
                new ObjectParameter("Validto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetNewsDetail_Result>("Usp_GetNewsDetail", newsIDParameter, categoryIDParameter, stateIDParameter, districtIDParameter, validfromParameter, validtoParameter);
        }
    
        public virtual ObjectResult<usp_GetNewsTextDetails_Result> usp_GetNewsTextDetails(Nullable<int> newsID, Nullable<int> langID, Nullable<int> categoryID, Nullable<int> stateID, Nullable<int> districtID, Nullable<System.DateTime> validfrom, Nullable<System.DateTime> validto)
        {
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("NewsID", newsID) :
                new ObjectParameter("NewsID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            var validfromParameter = validfrom.HasValue ?
                new ObjectParameter("Validfrom", validfrom) :
                new ObjectParameter("Validfrom", typeof(System.DateTime));
    
            var validtoParameter = validto.HasValue ?
                new ObjectParameter("Validto", validto) :
                new ObjectParameter("Validto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetNewsTextDetails_Result>("usp_GetNewsTextDetails", newsIDParameter, langIDParameter, categoryIDParameter, stateIDParameter, districtIDParameter, validfromParameter, validtoParameter);
        }
    
        public virtual int USP_GetPop(Nullable<int> cropTypeId)
        {
            var cropTypeIdParameter = cropTypeId.HasValue ?
                new ObjectParameter("CropTypeId", cropTypeId) :
                new ObjectParameter("CropTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetPop", cropTypeIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPOPDescDetails_Result> usp_GetPOPDescDetails(Nullable<int> descriptionID, Nullable<int> cropPopID)
        {
            var descriptionIDParameter = descriptionID.HasValue ?
                new ObjectParameter("DescriptionID", descriptionID) :
                new ObjectParameter("DescriptionID", typeof(int));
    
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPOPDescDetails_Result>("usp_GetPOPDescDetails", descriptionIDParameter, cropPopIDParameter);
        }
    
        public virtual ObjectResult<USP_GetStateDetails_Result> USP_GetStateDetails(Nullable<int> stateId)
        {
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetStateDetails_Result>("USP_GetStateDetails", stateIdParameter);
        }
    
        public virtual ObjectResult<usp_GetStateTextDetails_Result> usp_GetStateTextDetails(Nullable<int> stateID, Nullable<int> langID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetStateTextDetails_Result>("usp_GetStateTextDetails", stateIDParameter, langIDParameter);
        }
    
        public virtual ObjectResult<usp_GetUserApplications_Result> usp_GetUserApplications(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserApplications_Result>("usp_GetUserApplications", userIDParameter);
        }
    
        public virtual ObjectResult<usp_GetUserDistrict_Result> usp_GetUserDistrict(Nullable<int> userID, Nullable<int> langID, Nullable<int> stateID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("langID", langID) :
                new ObjectParameter("langID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserDistrict_Result>("usp_GetUserDistrict", userIDParameter, langIDParameter, stateIDParameter);
        }
    
        public virtual ObjectResult<usp_GetUserLanguage_Result> usp_GetUserLanguage(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserLanguage_Result>("usp_GetUserLanguage", userIDParameter);
        }
    
        public virtual ObjectResult<usp_GetUserList_Result> usp_GetUserList(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserList_Result>("usp_GetUserList", userIDParameter);
        }
    
        public virtual ObjectResult<usp_GetUserMappingList_Result> usp_GetUserMappingList(Nullable<int> userID, Nullable<int> stateId, string districtId, Nullable<int> langId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId != null ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(string));
    
            var langIdParameter = langId.HasValue ?
                new ObjectParameter("LangId", langId) :
                new ObjectParameter("LangId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserMappingList_Result>("usp_GetUserMappingList", userIDParameter, stateIdParameter, districtIdParameter, langIdParameter);
        }
    
        public virtual ObjectResult<usp_GetUserState_Result> usp_GetUserState(Nullable<int> userID, Nullable<int> langID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUserState_Result>("usp_GetUserState", userIDParameter, langIDParameter);
        }
    
        public virtual int usp_InsertCropPopDesc(Nullable<int> stateID, Nullable<int> districtId, Nullable<int> cropTypeId, Nullable<int> cropId, Nullable<int> cropPopID, Nullable<int> createdby, ObjectParameter cropDescID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("stateID", stateID) :
                new ObjectParameter("stateID", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cropTypeIdParameter = cropTypeId.HasValue ?
                new ObjectParameter("CropTypeId", cropTypeId) :
                new ObjectParameter("CropTypeId", typeof(int));
    
            var cropIdParameter = cropId.HasValue ?
                new ObjectParameter("CropId", cropId) :
                new ObjectParameter("CropId", typeof(int));
    
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertCropPopDesc", stateIDParameter, districtIdParameter, cropTypeIdParameter, cropIdParameter, cropPopIDParameter, createdbyParameter, cropDescID);
        }
    
        public virtual int Usp_InsertNewsDetail(Nullable<int> categoryID, Nullable<int> stateID, Nullable<int> districtID, Nullable<System.DateTime> validfrom, Nullable<System.DateTime> validto, string content, Nullable<int> createdby, Nullable<int> newsID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            var validfromParameter = validfrom.HasValue ?
                new ObjectParameter("Validfrom", validfrom) :
                new ObjectParameter("Validfrom", typeof(System.DateTime));
    
            var validtoParameter = validto.HasValue ?
                new ObjectParameter("Validto", validto) :
                new ObjectParameter("Validto", typeof(System.DateTime));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("NewsID", newsID) :
                new ObjectParameter("NewsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_InsertNewsDetail", categoryIDParameter, stateIDParameter, districtIDParameter, validfromParameter, validtoParameter, contentParameter, createdbyParameter, newsIDParameter);
        }
    
        public virtual int usp_InsertUpdateCrop(Nullable<int> cropID, string cropCode, string cropName, Nullable<int> createdBy, ObjectParameter resval, ObjectParameter errMsg)
        {
            var cropIDParameter = cropID.HasValue ?
                new ObjectParameter("CropID", cropID) :
                new ObjectParameter("CropID", typeof(int));
    
            var cropCodeParameter = cropCode != null ?
                new ObjectParameter("CropCode", cropCode) :
                new ObjectParameter("CropCode", typeof(string));
    
            var cropNameParameter = cropName != null ?
                new ObjectParameter("CropName", cropName) :
                new ObjectParameter("CropName", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateCrop", cropIDParameter, cropCodeParameter, cropNameParameter, createdByParameter, resval, errMsg);
        }
    
        public virtual int usp_InsertUpdateCropDescDetails(Nullable<int> cropDescID, Nullable<int> stateID, string districtID, Nullable<int> cropTypeID, Nullable<int> cropID, Nullable<int> cropPopID, Nullable<int> descriptionID, Nullable<int> createdBy, ObjectParameter errMsg, ObjectParameter resval)
        {
            var cropDescIDParameter = cropDescID.HasValue ?
                new ObjectParameter("CropDescID", cropDescID) :
                new ObjectParameter("CropDescID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var districtIDParameter = districtID != null ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(string));
    
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var cropIDParameter = cropID.HasValue ?
                new ObjectParameter("CropID", cropID) :
                new ObjectParameter("CropID", typeof(int));
    
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            var descriptionIDParameter = descriptionID.HasValue ?
                new ObjectParameter("DescriptionID", descriptionID) :
                new ObjectParameter("DescriptionID", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateCropDescDetails", cropDescIDParameter, stateIDParameter, districtIDParameter, cropTypeIDParameter, cropIDParameter, cropPopIDParameter, descriptionIDParameter, createdByParameter, errMsg, resval);
        }
    
        public virtual int usp_InsertUpdateCropPOP(Nullable<int> cropPopID, string cropPopName, string cropTypeID, Nullable<int> createdBy, ObjectParameter errMsg, ObjectParameter resval)
        {
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            var cropPopNameParameter = cropPopName != null ?
                new ObjectParameter("CropPopName", cropPopName) :
                new ObjectParameter("CropPopName", typeof(string));
    
            var cropTypeIDParameter = cropTypeID != null ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateCropPOP", cropPopIDParameter, cropPopNameParameter, cropTypeIDParameter, createdByParameter, errMsg, resval);
        }
    
        public virtual int usp_InsertUpdateCropPopDescLang(Nullable<int> cropDescID, Nullable<int> langID, string text, Nullable<int> createdBy)
        {
            var cropDescIDParameter = cropDescID.HasValue ?
                new ObjectParameter("CropDescID", cropDescID) :
                new ObjectParameter("CropDescID", typeof(int));
    
            var langIDParameter = langID.HasValue ?
                new ObjectParameter("LangID", langID) :
                new ObjectParameter("LangID", typeof(int));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateCropPopDescLang", cropDescIDParameter, langIDParameter, textParameter, createdByParameter);
        }
    
        public virtual int usp_InsertUpdateCropText(Nullable<int> cropID, Nullable<int> langId, string cropText, Nullable<int> createdBy)
        {
            var cropIDParameter = cropID.HasValue ?
                new ObjectParameter("CropID", cropID) :
                new ObjectParameter("CropID", typeof(int));
    
            var langIdParameter = langId.HasValue ?
                new ObjectParameter("LangId", langId) :
                new ObjectParameter("LangId", typeof(int));
    
            var cropTextParameter = cropText != null ?
                new ObjectParameter("CropText", cropText) :
                new ObjectParameter("CropText", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateCropText", cropIDParameter, langIdParameter, cropTextParameter, createdByParameter);
        }
    
        public virtual int usp_InsertUpdateCropType(Nullable<int> cropTypeID, string cropTypeCode, string cropTypeName, Nullable<int> createdBy, ObjectParameter resval, ObjectParameter errMsg)
        {
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var cropTypeCodeParameter = cropTypeCode != null ?
                new ObjectParameter("CropTypeCode", cropTypeCode) :
                new ObjectParameter("CropTypeCode", typeof(string));
    
            var cropTypeNameParameter = cropTypeName != null ?
                new ObjectParameter("CropTypeName", cropTypeName) :
                new ObjectParameter("CropTypeName", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateCropType", cropTypeIDParameter, cropTypeCodeParameter, cropTypeNameParameter, createdByParameter, resval, errMsg);
        }
    
        public virtual int usp_InsertUpdateDistrict(Nullable<int> stateId, Nullable<int> districtId, string districtCode, string districtName, Nullable<int> createdBy, ObjectParameter errMsg, ObjectParameter resval)
        {
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var districtNameParameter = districtName != null ?
                new ObjectParameter("DistrictName", districtName) :
                new ObjectParameter("DistrictName", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateDistrict", stateIdParameter, districtIdParameter, districtCodeParameter, districtNameParameter, createdByParameter, errMsg, resval);
        }
    
        public virtual int usp_InsertUpdateDistrictCrop(Nullable<int> stateID, string districtID, Nullable<int> cropTypeID, Nullable<int> cropID, Nullable<int> createdBy, ObjectParameter errMsg, ObjectParameter resval)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var districtIDParameter = districtID != null ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(string));
    
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var cropIDParameter = cropID.HasValue ?
                new ObjectParameter("CropID", cropID) :
                new ObjectParameter("CropID", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateDistrictCrop", stateIDParameter, districtIDParameter, cropTypeIDParameter, cropIDParameter, createdByParameter, errMsg, resval);
        }
    
        public virtual int usp_InsertUpdateDistrictText(Nullable<int> districtID, Nullable<int> langId, string districtText, Nullable<int> createdBy)
        {
            var districtIDParameter = districtID.HasValue ?
                new ObjectParameter("DistrictID", districtID) :
                new ObjectParameter("DistrictID", typeof(int));
    
            var langIdParameter = langId.HasValue ?
                new ObjectParameter("LangId", langId) :
                new ObjectParameter("LangId", typeof(int));
    
            var districtTextParameter = districtText != null ?
                new ObjectParameter("DistrictText", districtText) :
                new ObjectParameter("DistrictText", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateDistrictText", districtIDParameter, langIdParameter, districtTextParameter, createdByParameter);
        }
    
        public virtual int usp_InsertUpdateLanguageCrop(Nullable<int> cropTypeID, Nullable<int> langId, string cropText, Nullable<int> createdBy)
        {
            var cropTypeIDParameter = cropTypeID.HasValue ?
                new ObjectParameter("CropTypeID", cropTypeID) :
                new ObjectParameter("CropTypeID", typeof(int));
    
            var langIdParameter = langId.HasValue ?
                new ObjectParameter("LangId", langId) :
                new ObjectParameter("LangId", typeof(int));
    
            var cropTextParameter = cropText != null ?
                new ObjectParameter("CropText", cropText) :
                new ObjectParameter("CropText", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateLanguageCrop", cropTypeIDParameter, langIdParameter, cropTextParameter, createdByParameter);
        }
    
        public virtual int usp_InsertUpdateLanguagePOP(Nullable<int> cropPopID, Nullable<int> langId, string pOPText, Nullable<int> createdBy, ObjectParameter errMsg, ObjectParameter resval)
        {
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            var langIdParameter = langId.HasValue ?
                new ObjectParameter("LangId", langId) :
                new ObjectParameter("LangId", typeof(int));
    
            var pOPTextParameter = pOPText != null ?
                new ObjectParameter("POPText", pOPText) :
                new ObjectParameter("POPText", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateLanguagePOP", cropPopIDParameter, langIdParameter, pOPTextParameter, createdByParameter, errMsg, resval);
        }
    
        public virtual int usp_InsertUpdateNewsCat(Nullable<int> newscatId, string newscatName, Nullable<int> createdBy, ObjectParameter errMsg, ObjectParameter resval)
        {
            var newscatIdParameter = newscatId.HasValue ?
                new ObjectParameter("NewscatId", newscatId) :
                new ObjectParameter("NewscatId", typeof(int));
    
            var newscatNameParameter = newscatName != null ?
                new ObjectParameter("NewscatName", newscatName) :
                new ObjectParameter("NewscatName", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateNewsCat", newscatIdParameter, newscatNameParameter, createdByParameter, errMsg, resval);
        }
    
        public virtual int usp_InsertUpdateNewscatText(Nullable<int> newsCatID, Nullable<int> langId, string newscatText, Nullable<int> createdBy)
        {
            var newsCatIDParameter = newsCatID.HasValue ?
                new ObjectParameter("NewsCatID", newsCatID) :
                new ObjectParameter("NewsCatID", typeof(int));
    
            var langIdParameter = langId.HasValue ?
                new ObjectParameter("LangId", langId) :
                new ObjectParameter("LangId", typeof(int));
    
            var newscatTextParameter = newscatText != null ?
                new ObjectParameter("NewscatText", newscatText) :
                new ObjectParameter("NewscatText", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateNewscatText", newsCatIDParameter, langIdParameter, newscatTextParameter, createdByParameter);
        }
    
        public virtual int usp_InsertUpdateNewsText(Nullable<int> newsID, Nullable<int> langId, string newsText, Nullable<int> createdBy)
        {
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("NewsID", newsID) :
                new ObjectParameter("NewsID", typeof(int));
    
            var langIdParameter = langId.HasValue ?
                new ObjectParameter("LangId", langId) :
                new ObjectParameter("LangId", typeof(int));
    
            var newsTextParameter = newsText != null ?
                new ObjectParameter("NewsText", newsText) :
                new ObjectParameter("NewsText", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateNewsText", newsIDParameter, langIdParameter, newsTextParameter, createdByParameter);
        }
    
        public virtual int usp_InsertUpdatePOPDescDetails(Nullable<int> popDescriptionID, Nullable<int> cropPopID, string popDescriptionHead, string description, Nullable<int> createdBy, ObjectParameter errMsg, ObjectParameter resval)
        {
            var popDescriptionIDParameter = popDescriptionID.HasValue ?
                new ObjectParameter("PopDescriptionID", popDescriptionID) :
                new ObjectParameter("PopDescriptionID", typeof(int));
    
            var cropPopIDParameter = cropPopID.HasValue ?
                new ObjectParameter("CropPopID", cropPopID) :
                new ObjectParameter("CropPopID", typeof(int));
    
            var popDescriptionHeadParameter = popDescriptionHead != null ?
                new ObjectParameter("PopDescriptionHead", popDescriptionHead) :
                new ObjectParameter("PopDescriptionHead", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdatePOPDescDetails", popDescriptionIDParameter, cropPopIDParameter, popDescriptionHeadParameter, descriptionParameter, createdByParameter, errMsg, resval);
        }
    
        public virtual int usp_InsertUpdateState(Nullable<int> stateId, string stateCode, string stateName, Nullable<int> createdBy, ObjectParameter errMsg, ObjectParameter resval)
        {
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var stateNameParameter = stateName != null ?
                new ObjectParameter("StateName", stateName) :
                new ObjectParameter("StateName", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateState", stateIdParameter, stateCodeParameter, stateNameParameter, createdByParameter, errMsg, resval);
        }
    
        public virtual int usp_InsertUpdateStateText(Nullable<int> stateID, Nullable<int> langId, string stateText, Nullable<int> createdBy)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var langIdParameter = langId.HasValue ?
                new ObjectParameter("LangId", langId) :
                new ObjectParameter("LangId", typeof(int));
    
            var stateTextParameter = stateText != null ?
                new ObjectParameter("StateText", stateText) :
                new ObjectParameter("StateText", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateStateText", stateIDParameter, langIdParameter, stateTextParameter, createdByParameter);
        }
    
        public virtual int usp_InsertUpdateUserDetails(Nullable<int> userID, string displayName, string userName, string password, string emailID, string mobileNo, Nullable<int> roleID, string applicationTypeID, Nullable<int> createdBy, ObjectParameter resval, ObjectParameter errMsg)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var displayNameParameter = displayName != null ?
                new ObjectParameter("DisplayName", displayName) :
                new ObjectParameter("DisplayName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var applicationTypeIDParameter = applicationTypeID != null ?
                new ObjectParameter("ApplicationTypeID", applicationTypeID) :
                new ObjectParameter("ApplicationTypeID", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateUserDetails", userIDParameter, displayNameParameter, userNameParameter, passwordParameter, emailIDParameter, mobileNoParameter, roleIDParameter, applicationTypeIDParameter, createdByParameter, resval, errMsg);
        }
    
        public virtual int usp_InsertUpdateUserMapping(Nullable<int> userMappingID, string action, Nullable<int> userID, Nullable<int> stateId, string districtId, Nullable<int> longID, Nullable<int> createdBy, ObjectParameter resval, ObjectParameter errMsg)
        {
            var userMappingIDParameter = userMappingID.HasValue ?
                new ObjectParameter("UserMappingID", userMappingID) :
                new ObjectParameter("UserMappingID", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId != null ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(string));
    
            var longIDParameter = longID.HasValue ?
                new ObjectParameter("LongID", longID) :
                new ObjectParameter("LongID", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUpdateUserMapping", userMappingIDParameter, actionParameter, userIDParameter, stateIdParameter, districtIdParameter, longIDParameter, createdByParameter, resval, errMsg);
        }
    
        public virtual ObjectResult<usp_Role_Result> usp_Role(Nullable<int> roleID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Role_Result>("usp_Role", roleIDParameter);
        }
    
        public virtual ObjectResult<usp_ValidateUserLogin_Result> usp_ValidateUserLogin(string userName, string password, ObjectParameter errMsg)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ValidateUserLogin_Result>("usp_ValidateUserLogin", userNameParameter, passwordParameter, errMsg);
        }
    }
}
